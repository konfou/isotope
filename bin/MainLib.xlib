<Library Source="Untitled.proj">
	<Class Name="Object" ID="1" Gen="1" />
	<Class Name="Integer" ID="2" ParID="0" Parent="Object" Gen="1" />
	<Class Name="StackLayer" ID="3" ParID="0" Parent="Object" Gen="1">
		<Var Exp="!Object:catcher" />
	</Class>
	<Machine ID="4" Name="Array" Gen="1">
		<Method Name="!new">
			<Var Exp="Integer:initialSize" />
		</Method>
		<Method Name="getSize">
			<Var Exp="&amp;Integer:size" />
		</Method>
		<Method Name="&amp;add">
			<Var Exp="Object:obj" />
		</Method>
		<Method Name="get">
			<Var Exp="!Object:obj" />
			<Var Exp="Integer:index" />
		</Method>
		<Method Name="&amp;set">
			<Var Exp="Integer:index" />
			<Var Exp="Object:obj" />
		</Method>
	</Machine>
	<Machine ID="5" Name="BigInt" Gen="1">
		<Method Name="!new" />
		<Method Name="getSign">
			<Var Exp="&amp;Bool:sign" />
		</Method>
		<Method Name="&amp;setSign">
			<Var Exp="Bool:sign" />
		</Method>
		<Method Name="getBitCount">
			<Var Exp="&amp;Integer:bitCount" />
		</Method>
		<Method Name="getBit">
			<Var Exp="&amp;Integer:value" />
			<Var Exp="Integer:index" />
		</Method>
		<Method Name="&amp;setBit">
			<Var Exp="Integer:index" />
			<Var Exp="Bool:value" />
		</Method>
		<Method Name="getUIntCount">
			<Var Exp="&amp;Integer:count" />
		</Method>
		<Method Name="getUInt">
			<Var Exp="&amp;Integer:value" />
			<Var Exp="Integer:index" />
		</Method>
		<Method Name="&amp;setUInt">
			<Var Exp="Integer:index" />
			<Var Exp="Integer:value" />
		</Method>
		<Method Name="&amp;setToZero" />
		<Method Name="isZero">
			<Var Exp="&amp;Bool:b" />
		</Method>
		<Method Name="compareTo">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="BigInt:that" />
		</Method>
		<Method Name="&amp;copy">
			<Var Exp="BigInt:that" />
		</Method>
		<Method Name="toHex">
			<Var Exp="&amp;String:hex" />
		</Method>
		<Method Name="&amp;fromHex">
			<Var Exp="String:hex" />
		</Method>
		<Method Name="&amp;invert" />
		<Method Name="&amp;increment" />
		<Method Name="&amp;decrement" />
		<Method Name="&amp;add">
			<Var Exp="BigInt:that" />
		</Method>
		<Method Name="&amp;subtract">
			<Var Exp="BigInt:that" />
		</Method>
		<Method Name="&amp;multiply">
			<Var Exp="Integer:int" />
		</Method>
		<Method Name="&amp;multiply">
			<Var Exp="BigInt:a" />
			<Var Exp="BigInt:b" />
		</Method>
		<Method Name="&amp;divide">
			<Var Exp="BigInt:nominator" />
			<Var Exp="BigInt:denominator" />
			<Var Exp="&amp;BigInt:remainder" />
		</Method>
		<Method Name="&amp;shiftLeft">
			<Var Exp="Integer:bits" />
		</Method>
		<Method Name="&amp;shiftRight">
			<Var Exp="Integer:bits" />
		</Method>
		<Method Name="&amp;or">
			<Var Exp="BigInt:that" />
		</Method>
		<Method Name="&amp;and">
			<Var Exp="BigInt:that" />
		</Method>
		<Method Name="&amp;xor">
			<Var Exp="BigInt:that" />
		</Method>
		<Method Name="isPrime">
			<Var Exp="&amp;Bool:prime" />
		</Method>
		<Method Name="&amp;euclid">
			<Var Exp="BigInt:a" />
			<Var Exp="BigInt:b" />
			<Var Exp="&amp;BigInt:x" />
			<Var Exp="&amp;BigInt:y" />
		</Method>
		<Method Name="&amp;powerMod">
			<Var Exp="BigInt:a" />
			<Var Exp="BigInt:k" />
			<Var Exp="BigInt:n" />
		</Method>
		<Method Name="millerRabin">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="BigInt:seed" />
		</Method>
	</Machine>
	<Class Name="Bool" ID="6" ParID="2" Parent="Integer" Gen="1" Source="Bool.gasp">
		<Const Name="true" Val="1" />
		<Const Name="false" Val="0" />
	</Class>
	<Machine ID="7" Name="Console" Gen="1">
		<Method Name="print">
			<Var Exp="String:s" />
		</Method>
		<Method Name="print">
			<Var Exp="Integer:i" />
		</Method>
		<Method Name="print">
			<Var Exp="Float:f" />
		</Method>
	</Machine>
	<Machine ID="8" Name="Engine" Gen="1">
		<Method Name="collectTheGarbage" />
		<Method Name="getObjectCount">
			<Var Exp="&amp;Integer:count" />
		</Method>
		<Method Name="getClass">
			<Var Exp="&amp;Integer:id" />
			<Var Exp="Object:obj" />
		</Method>
		<Method Name="getRandomNumber">
			<Var Exp="&amp;Integer:n" />
		</Method>
		<Method Name="getRefs">
			<Var Exp="&amp;Integer:refCount" />
			<Var Exp="Object:obj" />
		</Method>
		<Method Name="getGlobalObject">
			<Var Exp="!Object:dest" />
		</Method>
		<Method Name="setGlobalObject">
			<Var Exp="Object:src" />
		</Method>
		<Method Name="getRefs">
			<Var Exp="&amp;Integer:refCount" />
			<Var Exp="Object:obj" />
		</Method>
		<Method Name="buildProject">
			<Var Exp="!Library:lib" />
			<Var Exp="Project:proj" />
		</Method>
	</Machine>
	<Class Name="Exception" ID="9" ParID="0" Parent="Object" Gen="1" Source="Exception.gasp">
		<Var Exp="!String:message" />
		<Method Name="!new" ID="0">
			<Var Exp="String:message" />
			<Sym Data="00000000100000001000000010000000100000001000000010000000ffffffffffffffff1000000020000000200000002000000020000000200000002000000020000000ffffffff" />
			<Bin Data="f1bfffffff90000000000222100000009120000000e10000000000000080e100000020000000a0100000002000000080e10000001000000042bfffffff0000000010000000100002d010000000bfffffff00000000221000000022cfffffff9120000000e1000000500000001032" />
		</Method>
		<Method Name="getMessage" ID="1">
			<Var Exp="!String:message" />
			<Sym Data="00000000000000000000000000000000ffffffff" />
			<Bin Data="02d000000000bfffffff0000000080e100000000000000a0cfffffff0000000032" />
		</Method>
	</Class>
	<Class Name="NullReferenceException" ID="10" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Class Name="EngineException" ID="11" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Class Name="CastException" ID="12" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Class Name="DeserializationException" ID="13" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Class Name="IOException" ID="14" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Class Name="SdlException" ID="15" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Class Name="XmlException" ID="16" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Class Name="CompileException" ID="17" ParID="9" Parent="Exception" Gen="1" Source="Exception.gasp" />
	<Machine ID="18" Name="Float" Gen="1">
		<Method Name="&amp;add">
			<Var Exp="Float:that" />
		</Method>
		<Method Name="add">
			<Var Exp="!Float:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;add">
			<Var Exp="Integer:that" />
		</Method>
		<Method Name="compareTo">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;cosine">
			<Var Exp="Float:radians" />
		</Method>
		<Method Name="&amp;divide">
			<Var Exp="Float:that" />
		</Method>
		<Method Name="divide">
			<Var Exp="!Float:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;divide">
			<Var Exp="Integer:that" />
		</Method>
		<Method Name="&amp;fromInteger">
			<Var Exp="Integer:int" />
		</Method>
		<Method Name="isZero">
			<Var Exp="&amp;Bool:result" />
		</Method>
		<Method Name="isPositive">
			<Var Exp="&amp;Bool:result" />
		</Method>
		<Method Name="isNonZero">
			<Var Exp="&amp;Bool:result" />
		</Method>
		<Method Name="toInteger">
			<Var Exp="&amp;Integer:value" />
		</Method>
		<Method Name="toString">
			<Var Exp="&amp;String:s" />
		</Method>
		<Method Name="&amp;fromString">
			<Var Exp="String:s" />
		</Method>
		<Method Name="max">
			<Var Exp="!Float:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="min">
			<Var Exp="!Float:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;multiply">
			<Var Exp="Float:that" />
		</Method>
		<Method Name="multiply">
			<Var Exp="!Float:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;multiply">
			<Var Exp="Integer:that" />
		</Method>
		<Method Name="&amp;sine">
			<Var Exp="Float:radians" />
		</Method>
		<Method Name="&amp;subtract">
			<Var Exp="Float:that" />
		</Method>
		<Method Name="subtract">
			<Var Exp="!Float:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;subtract">
			<Var Exp="Integer:that" />
		</Method>
		<Method Name="isEqual">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="isNotEqual">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="isLessThan">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="isGreaterThan">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="Float:that" />
		</Method>
		<Method Name="!new" />
		<Method Name="compareTo">
			<Var Exp="&amp;Bool:result" />
			<Var Exp="Float:that" />
			<Var Exp="Float:tolerance" />
		</Method>
		<Method Name="!newcopy">
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;copy">
			<Var Exp="Float:that" />
		</Method>
		<Method Name="&amp;copy">
			<Var Exp="Integer:that" />
		</Method>
		<Method Name="&amp;abs" />
	</Machine>
	<Machine ID="19" Name="Image" Gen="1">
		<Method Name="!new" />
		<Method Name="&amp;setSize">
			<Var Exp="Integer:width" />
			<Var Exp="Integer:height" />
		</Method>
		<Method Name="&amp;setPixel">
			<Var Exp="Integer:x" />
			<Var Exp="Integer:y" />
			<Var Exp="Color:c" />
		</Method>
		<Method Name="getPixel">
			<Var Exp="&amp;Color:c" />
			<Var Exp="Integer:x" />
			<Var Exp="Integer:y" />
		</Method>
		<Method Name="getRect">
			<Var Exp="&amp;Rect:r" />
		</Method>
		<Method Name="getSize">
			<Var Exp="&amp;Integer:w" />
			<Var Exp="&amp;Integer:h" />
		</Method>
		<Method Name="&amp;load">
			<Var Exp="String:filename" />
		</Method>
		<Method Name="save">
			<Var Exp="String:filename" />
		</Method>
	</Machine>
	<Class Name="Color" ID="20" ParID="2" Parent="Integer" Gen="1" Source="Image.gasp" />
	<Class Name="Rect" ID="21" ParID="0" Parent="Object" Gen="1" Source="Image.gasp">
		<Var Exp="!Integer:x" />
		<Var Exp="!Integer:y" />
		<Var Exp="!Integer:w" />
		<Var Exp="!Integer:h" />
		<Method Name="!new" ID="2">
			<Sym Data="000000001000000010000000ffffffff2000000020000000ffffffff3000000030000000ffffffff4000000040000000ffffffffffffffff" />
			<Bin Data="f1cfffffff5100000002e10000000042cfffffff000000000000000002e11000000042cfffffff100000001000000002e12000000042cfffffff200000002000000002e13000000042cfffffff300000003000000032" />
		</Method>
		<Method Name="!new" ID="3">
			<Var Exp="Integer:x" />
			<Var Exp="Integer:y" />
			<Var Exp="Integer:w" />
			<Var Exp="Integer:h" />
			<Sym Data="0000000000000000000000000000000000000000100000001000000010000000200000002000000020000000300000003000000030000000400000004000000040000000ffffffff" />
			<Bin Data="00228fffffff6020000000a08fffffff100000001002d0000000008fffffff0000000090000000009fffffff02d0100000008fffffff100000009010000000afffffff02d0200000008fffffff200000009020000000bfffffff02d0300000008fffffff300000009030000000cfffffff32" />
		</Method>
		<Method Name="&amp;copy" ID="4">
			<Var Exp="Integer:x" />
			<Var Exp="Integer:y" />
			<Var Exp="Integer:w" />
			<Var Exp="Integer:h" />
			<Sym Data="000000000000000000000000100000001000000010000000200000002000000020000000300000003000000030000000ffffffff" />
			<Bin Data="02d0000000008fffffff0000000090000000009fffffff02d0100000008fffffff100000009010000000afffffff02d0200000008fffffff200000009020000000bfffffff02d0300000008fffffff300000009030000000cfffffff32" />
		</Method>
		<Method Name="&amp;copy" ID="5">
			<Var Exp="Rect:that" />
			<Sym Data="0000000000000000000000000000000000000000100000001000000010000000100000001000000020000000200000002000000020000000200000003000000030000000300000003000000030000000ffffffff" />
			<Bin Data="02d000000000bfffffff0000000002d010000000cfffffff0000000090000000001000000002d020000000bfffffff1000000002d030000000cfffffff1000000090200000003000000002d040000000bfffffff2000000002d050000000cfffffff2000000090400000005000000002d060000000bfffffff3000000002d070000000cfffffff3000000090600000007000000032" />
		</Method>
	</Class>
	<Machine ID="22" Name="Library" Gen="1">
		<Method Name="!load">
			<Var Exp="String:filename" />
		</Method>
		<Method Name="save">
			<Var Exp="String:filename" />
		</Method>
	</Machine>
	<Machine ID="23" Name="PopUps" Gen="1">
		<Method Name="messageBox">
			<Var Exp="String:title" />
			<Var Exp="String:message" />
		</Method>
		<Method Name="getStringBox">
			<Var Exp="&amp;String:s" />
			<Var Exp="String:title" />
		</Method>
	</Machine>
	<Class Name="Project" ID="24" ParID="0" Parent="Object" Gen="1" Source="Project.gasp">
		<Var Exp="!Array:files" />
		<Method Name="&amp;addFilename" ID="6">
			<Var Exp="String:filename" />
			<Sym Data="00000000000000000000000000000000000000000000000000000000ffffffff" />
			<Bin Data="0002d010000000bfffffff00000000221000000022cfffffff912000000040000000200000001032" />
		</Method>
		<Method Name="build" ID="7">
			<Var Exp="!Library:lib" />
			<Sym Data="000000000000000000000000000000000000000000000000000000000000000000000000ffffffff" />
			<Bin Data="0200220000000022cfffffff22bfffffff91200000008000000080000000806100000030000000a0cfffffff300000001032" />
		</Method>
		<Procedure Name="new" ID="8">
			<Var Exp="!Project:dest" />
			<Sym Data="0000000010000000100000001000000010000000100000001000000010000000100000001000000010000000ffffffffffffffff10000000ffffffff" />
			<Bin Data="f1cfffffff81000000000202e1200000005220000000010000002210000000222000000091300000004000000000000000804000000030000000a0100000003000000080400000001000000042cfffffff00000000100000001032" />
		</Procedure>
	</Class>
	<Machine ID="25" Name="SdlWindow" Gen="1">
		<Method Name="!new" />
		<Method Name="getNextFrame">
			<Var Exp="!SdlFrame:frame" />
		</Method>
	</Machine>
	<Machine ID="26" Name="SdlFrame" Gen="1">
		<Method Name="&amp;drawStars" />
		<Method Name="&amp;stretchBlit">
			<Var Exp="Rect:dest" />
			<Var Exp="Image:img" />
			<Var Exp="Rect:source" />
		</Method>
	</Machine>
	<Machine ID="27" Name="SdlScene" Gen="1">
		<Method Name="!render">
			<Var Exp="String:filename" />
		</Method>
		<Method Name="draw">
			<Var Exp="&amp;SdlFrame:frame" />
			<Var Exp="Point3D:focusPoint" />
			<Var Exp="Integer:frameNumber" />
		</Method>
	</Machine>
	<Class Name="Point3D" ID="28" ParID="0" Parent="Object" Gen="1" Source="Sdl.gasp">
		<Var Exp="!Integer:x" />
		<Var Exp="!Integer:y" />
		<Var Exp="!Integer:z" />
		<Method Name="!new" ID="9">
			<Sym Data="000000001000000010000000ffffffff2000000020000000ffffffff3000000030000000ffffffffffffffff" />
			<Bin Data="f1cfffffffc100000002e10000000042cfffffff000000000000000002e11000000042cfffffff100000001000000002e12000000042cfffffff200000002000000032" />
		</Method>
		<Method Name="!new" ID="10">
			<Var Exp="Integer:x" />
			<Var Exp="Integer:y" />
			<Var Exp="Integer:z" />
			<Sym Data="0000000000000000000000000000000000000000100000001000000010000000200000002000000020000000300000003000000030000000ffffffff" />
			<Bin Data="00229fffffff6090000000a09fffffff100000001002d0000000009fffffff000000009000000000afffffff02d0100000009fffffff100000009010000000bfffffff02d0200000009fffffff200000009020000000cfffffff32" />
		</Method>
	</Class>
	<Machine ID="29" Name="Stream" Gen="1">
		<Method Name="!new" />
		<Method Name="getSize">
			<Var Exp="&amp;Integer:size" />
		</Method>
		<Method Name="&amp;writeObject">
			<Var Exp="Object:obj" />
		</Method>
		<Method Name="&amp;readObject">
			<Var Exp="!Object:obj" />
		</Method>
	</Machine>
	<Machine ID="30" Name="String" Gen="1">
		<Method Name="!new" />
		<Method Name="toInteger">
			<Var Exp="&amp;Integer:int" />
		</Method>
		<Method Name="&amp;fromInteger">
			<Var Exp="Integer:int" />
		</Method>
		<Method Name="getLength">
			<Var Exp="&amp;Integer:length" />
		</Method>
		<Method Name="!getConstantString">
			<Var Exp="Integer:index" />
		</Method>
		<Method Name="&amp;copy">
			<Var Exp="String:that" />
		</Method>
		<Method Name="&amp;copySub">
			<Var Exp="String:that" />
			<Var Exp="Integer:index" />
			<Var Exp="Integer:length" />
		</Method>
		<Method Name="&amp;add">
			<Var Exp="String:that" />
		</Method>
		<Method Name="compare">
			<Var Exp="&amp;Integer:result" />
			<Var Exp="String:that" />
		</Method>
		<Method Name="compareIgnoringCase">
			<Var Exp="&amp;Integer:result" />
			<Var Exp="String:that" />
		</Method>
		<Method Name="&amp;clear" />
		<Method Name="find">
			<Var Exp="&amp;Integer:index" />
			<Var Exp="String:s" />
		</Method>
		<Method Name="findIgnoringCase">
			<Var Exp="&amp;Integer:index" />
			<Var Exp="String:s" />
		</Method>
		<Method Name="&amp;toUpper" />
		<Method Name="&amp;toLower" />
		<Method Name="getChar">
			<Var Exp="&amp;Integer:char" />
			<Var Exp="Integer:index" />
		</Method>
		<Method Name="&amp;setChar">
			<Var Exp="Integer:index" />
			<Var Exp="Integer:char" />
		</Method>
	</Machine>
	<Class Name="StringSegment" ID="31" ParID="0" Parent="Object" Gen="1" Source="String.gasp">
		<Var Exp="!String:s" />
		<Var Exp="!Integer:start" />
		<Var Exp="!Integer:length" />
		<Method Name="getBounds" ID="11">
			<Var Exp="&amp;Integer:start" />
			<Var Exp="&amp;Integer:length" />
			<Sym Data="000000000000000000000000100000001000000010000000ffffffff" />
			<Bin Data="02d000000000afffffff1000000090bfffffff0000000002d010000000afffffff2000000090cfffffff1000000032" />
		</Method>
		<Method Name="&amp;setBounds" ID="12">
			<Var Exp="Integer:start" />
			<Var Exp="Integer:length" />
			<Sym Data="000000000000000000000000100000001000000010000000ffffffff" />
			<Bin Data="02d000000000afffffff100000009000000000bfffffff02d010000000afffffff200000009010000000cfffffff32" />
		</Method>
		<Method Name="getString" ID="13">
			<Var Exp="!String:s" />
			<Sym Data="00000000000000000000000000000000ffffffff" />
			<Bin Data="02d000000000bfffffff0000000080e100000000000000a0cfffffff0000000032" />
		</Method>
		<Method Name="&amp;setString" ID="14">
			<Var Exp="String:s" />
			<Sym Data="000000000000000000000000ffffffffffffffffffffffff" />
			<Bin Data="0280e1000000cfffffffa000000000cfffffff80e10000000000000042bfffffff000000000000000032" />
		</Method>
		<Method Name="getSubString" ID="15">
			<Var Exp="&amp;String:s" />
			<Sym Data="00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff" />
			<Bin Data="0002d010000000bfffffff0000000002d020000000bfffffff1000000002d030000000bfffffff2000000022cfffffff2210000000222000000022300000009140000000e1000000600000001032" />
		</Method>
		<Procedure Name="new" ID="16">
			<Var Exp="!StringSegment:dest" />
			<Var Exp="String:s" />
			<Sym Data="0000000000000000ffffffff1000000010000000ffffffff200000002000000020000000ffffffffffffffffffffffff" />
			<Bin Data="02e10000000042bfffffff100000000000000002e11000000042bfffffff20000000100000000280e1000000cfffffffa020000000cfffffff80e10000002000000042bfffffff000000002000000032" />
		</Procedure>
	</Class>
</Library>
 