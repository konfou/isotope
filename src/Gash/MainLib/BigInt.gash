machine BigInt
{
	method !new()
	method getSign(&Bool:sign)
	method &setSign(Bool:sign)
	method getBitCount(&Integer:bitCount)
	method getBit(&Integer:value, Integer:index)
	method &setBit(Integer:index, Bool:value)
	method getUIntCount(&Integer:count)
	method getUInt(&Integer:value, Integer:index)
	method &setUInt(Integer:index, Integer:value)
	method &setToZero()
	method isZero(&Bool:b)
	method compareTo(&Bool:result, BigInt:that)
	method &copy(BigInt:that)
	method toHex(&String:hex)
	method &fromHex(String:hex)
	method &invert()
	method &increment()
	method &decrement()
	method &add(BigInt:that)
	method &subtract(BigInt:that)
	method &multiply(Integer:int)
	method &multiply(BigInt:a, BigInt:b)
	method &divide(BigInt:nominator, BigInt:denominator, &BigInt:remainder)
	method &shiftLeft(Integer:bits)
	method &shiftRight(Integer:bits)
	method &or(BigInt:that)
	method &and(BigInt:that)
	method &xor(BigInt:that)
	method isPrime(&Bool:prime)
	method &euclid(BigInt:a, BigInt:b, &BigInt:x, &BigInt:y)
	method &powerMod(BigInt:a, BigInt:k, BigInt:n)
	method millerRabin(&Bool:result, BigInt:seed)
}
