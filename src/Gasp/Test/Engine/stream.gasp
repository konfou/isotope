class Foo(Object)
{
	!Foo:f
	!Bar:b

	method !new()
	{
		allocate(!this)
	}
}

class Bar(Object)
{
	!Foo:f
	!Integer:i

	method !new()
	{
		allocate(!this)
	}
}


class Test(Object)
{
	proc main()
	{
		!Stream:s.new()
		to stream(&s)
		from stream(&s)
	}

	proc to stream(&Stream:s)
	{
		!Bar:b1.new()
		!b1.i.set(4)
		!b1.f.new()
		!b1.f.b.set(b1)

		&s.writeObject(b1)
	}

	proc from stream(&Stream:s)
	{
		&s.readObject(!Bar:b2)
		if(b2.i <> 4)
			throw("integer wrong")
		if(b2.f.f != null)
			throw("null wrong")
		if(b2.f.b == b2)
			return()
		throw("circular ref wrong")
	}
}
