machine Animation
{
	method getFrame(!GImage:i, &Rect:r)
	method getColumnFrame(!GImage:i, &Rect:r, Float:cameraDirection)
	method &advanceTime(&Bool:looped, Float:dt)
	method !newCopy(Animation:that)
}

machine GameMachine
{
	method &update(Float:time, &Avatar:avatar)
	method getAnimation(!Animation:anim, String:id)
	method getImage(!GImage:image, String:id)
	method getAvatar(!Avatar:avatar)
	method getObjectById(!RealmObject:obj, Integer:id)
	method getClosestObject(!RealmObject:obj, Float:x, Float:y)
	method followLink(String:url)
	method getUid(&Integer:uid)
	method getTime(&Float:time)
	method addObject(RealmObject:obj)
	method removeObject(Integer:id)
	method playSound(String:id)
	method notifyServerAboutObjectUpdate(RealmObject:obj)
	method sendToClient(Object:obj, Integer:connection)
	method sendToServer(Object:obj)
	method addInventoryItem(String:url)
}

machine GImage
{
	method !makeTextImage(String:text)
	method &setSize(Integer:width, Integer:height)
	method &setPixel(Integer:x, Integer:y, Color:c)
	method getPixel(&Color:c, Integer:x, Integer:y)
	method getRect(&Rect:r)
	method getSize(&Integer:w, &Integer:h)
	method !load(String:filename)
	method save(String:filename)
	method &setText(String:text)
}

interface IObject
{
	method &update(Float:time)
	method getFrame(!GImage:i, &Rect:r, Float:cameraDirection)
	method &doAction(Float:x, Float:y)
	method &onGetFocus()
	method &onLoseFocus()
	method verify(&Bool:ok, Integer:client, RealmObject:newObj)
}

interface IRemote
{
	method &receiveFromServer(Object:obj)
	method &receiveFromClient(Object:obj, Integer:connection)
}

class RealmObject(Object)
{
	interface IObject

	!Integer:uid
	!Float:time
	!Float:x
	!Float:y
	!Float:z
	!Float:sx
	!Float:sy
	!Float:sz

	method &init()
	{
		!this.uid.new()
		!GameMachine:gm.getUid(&this.uid)

		!this.time.new()
		gm.getTime(&this.time)

		!this.x.new()
		!this.y.new()
		!this.z.new()

		!this.sx.new()
		!this.sy.new()
		!this.sz.new()
	}
}

class Remote(Object)
{
	interface IRemote

	method sendToClient(Object:obj, Integer:connection)
	{
		!GameMachine:gm.sendToClient(obj, connection)
	}

	method sendToServer(Object:obj)
	{
		!GameMachine:gm.sendToServer(obj)
	}
}

class Avatar(RealmObject)
{
	!Float:dx
	!Float:dy
	!Float:speed
	!Float:stepRate
	!Float:reach
	!Float:actionTime
	!Animation:anim
	!Animation:animaction

	method !new(String:animID, String:animActionID)
	{
		!this.allocate()
		&this.init()
		!this.dx.new()
		!this.dy.new()
		!this.speed.new()
		&this.speed.fromString("350")
		!this.stepRate.new()
		&this.stepRate.fromString("22")
		!this.reach.new()
		&this.reach.fromString("300")
		!this.actionTime.new()
		!GameMachine:gm.getAnimation(!this.anim, animID)
		!GameMachine:gm.getAnimation(!this.animaction, animActionID)
	}

	method &update(Float:time)
	{
		!Float:t.newcopy(time)
		&t.subtract(this.time)

		&this.actionTime.subtract(t)

		!Float:tx.newcopy(t)
		&tx.multiply(this.dx)
		&this.x.add(tx)

		!Float:ty.newcopy(t)
		&ty.multiply(this.dy)
		&this.y.add(ty)

		!Bool:b.new()
		this.dx.isNonZero(&b)
		if(b)
		{
			this.dy.isNonZero(&b)
			if(b)
			{
				!Float:tstep.newcopy(t)
				&tstep.multiply(this.stepRate)
				&this.anim.advanceTime(&b, tstep)
			}
		}

		&this.time.add(t)
	}

	method getFrame(!GImage:i, &Rect:r, Float:cameraDirection)
	{
		if(this.actionTime > 0.0)
			this.animAction.getColumnFrame(!i, &r, cameraDirection)
		else
			this.anim.getColumnFrame(!i, &r, cameraDirection)
	}

	method &doAction(Float:x, Float:y)
	{
		!Console:c.print("Avatar:doAction")
	}

	method &onGetFocus()
	{
	}

	method &onLoseFocus()
	{
	}

	method verify(&Bool:ok, Integer:client, RealmObject:newObj)
	{
	}
}

class Scenery(RealmObject)
{
	!GImage:image

	method !new(String:imageID)
	{
		!this.allocate()
		&this.init()
		!GameMachine:gm.getImage(!this.image, imageID)
	}

	method &update(Float:time)
	{
	}

	method getFrame(!GImage:i, &Rect:r, Float:cameraDirection)
	{
		!i.set(this.image)
		i.getRect(&r)
	}

	method &doAction(Float:x, Float:y)
	{
	}

	method &onGetFocus()
	{
	}

	method &onLoseFocus()
	{
	}

	method verify(&Bool:ok, Integer:client, RealmObject:newObj)
	{
	}
}

class ChatCloud(RealmObject)
{
	!GImage:image

	method !new(String:text)
	{
		!this.allocate()
		&this.init()
		!this.image.makeTextImage(text)
		!Integer:w.new()
		!Integer:h.new()
		this.image.getSize(&w, &h)
		&w.add(w)
		&h.add(h)
		&this.sx.copy(w)
		&this.sy.copy(w)
		&this.sz.copy(h)
	}

	method &update(Float:time)
	{
		!Float:t.newcopy(time)
		&t.subtract(this.time)
		!Integer:tmp.new()
		t.toInteger(&tmp)
		if(tmp < 10)
		{
			!Float:fac.new()
			&fac.fromString("60")
			&t.multiply(fac)
			&this.z.add(t)
		}
		this.z.toInteger(&tmp)
		if(tmp > 1500)
			GameMachine:gm.removeObject(this.uid)
		&this.time.copy(time)
	}

	method getFrame(!GImage:i, &Rect:r, Float:cameraDirection)
	{
		!i.set(this.image)
		i.getRect(&r)
	}

	method &doAction(Float:x, Float:y)
	{
	}

	method &onGetFocus()
	{
	}

	method &onLoseFocus()
	{
	}

	method verify(&Bool:ok, Integer:client, RealmObject:newObj)
	{
	}
}

class Bogus(Object)
{
	proc main()
	{
		!Rect:r.new()
		!Stream:s.new()
		Console:out.print("Hello World")
	}
}
